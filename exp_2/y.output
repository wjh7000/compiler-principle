Terminals which are not used

   BEGIN_N
   END
   KEY
   SPACE_ENTER
   UNDEFINE
   ILHEX
   ILOCT
   END_OF_INPUT


State 36 conflicts: 1 shift/reduce


Grammar

    0 $accept: P $end

    1 P: L
    2  | L P

    3 L: S SEMI

    4 S: IDN EQ E
    5  | IF C THEN S
    6  | IF C THEN S ELSE S
    7  | WHILE C DO S

    8 C: E GT E
    9  | E LT E
   10  | E EQ E
   11  | E GE E
   12  | E LE E
   13  | E NEQ E

   14 E: E ADD T
   15  | E SUB T
   16  | T

   17 T: T MUL F
   18  | T DIV F
   19  | F

   20 F: SLP E SRP
   21  | IDN
   22  | OCT
   23  | DEC
   24  | HEX


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 5 6
THEN (259) 5 6
ELSE (260) 6
WHILE (261) 7
DO (262) 7
BEGIN_N (263)
END (264)
ADD (265) 14
SUB (266) 15
MUL (267) 17
DIV (268) 18
GT (269) 8
LT (270) 9
EQ (271) 4 10
GE (272) 11
LE (273) 12
NEQ (274) 13
SLP (275) 20
SRP (276) 20
SEMI (277) 3
KEY (278)
SPACE_ENTER (279)
UNDEFINE (280)
DEC (281) 23
HEX (282) 24
OCT (283) 22
ILHEX (284)
ILOCT (285)
IDN (286) 4 21
END_OF_INPUT (287)


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
P (34)
    on left: 1 2, on right: 0 2
L (35)
    on left: 3, on right: 1 2
S (36)
    on left: 4 5 6 7, on right: 3 5 6 7
C (37)
    on left: 8 9 10 11 12 13, on right: 5 6 7
E (38)
    on left: 14 15 16, on right: 4 8 9 10 11 12 13 14 15 20
T (39)
    on left: 17 18 19, on right: 14 15 16 17 18
F (40)
    on left: 20 21 22 23 24, on right: 17 18 19


state 0

    0 $accept: . P $end

    IF     shift, and go to state 1
    WHILE  shift, and go to state 2
    IDN    shift, and go to state 3

    P  go to state 4
    L  go to state 5
    S  go to state 6


state 1

    5 S: IF . C THEN S
    6  | IF . C THEN S ELSE S

    SLP  shift, and go to state 7
    DEC  shift, and go to state 8
    HEX  shift, and go to state 9
    OCT  shift, and go to state 10
    IDN  shift, and go to state 11

    C  go to state 12
    E  go to state 13
    T  go to state 14
    F  go to state 15


state 2

    7 S: WHILE . C DO S

    SLP  shift, and go to state 7
    DEC  shift, and go to state 8
    HEX  shift, and go to state 9
    OCT  shift, and go to state 10
    IDN  shift, and go to state 11

    C  go to state 16
    E  go to state 13
    T  go to state 14
    F  go to state 15


state 3

    4 S: IDN . EQ E

    EQ  shift, and go to state 17


state 4

    0 $accept: P . $end

    $end  shift, and go to state 18


state 5

    1 P: L .
    2  | L . P

    IF     shift, and go to state 1
    WHILE  shift, and go to state 2
    IDN    shift, and go to state 3

    $default  reduce using rule 1 (P)

    P  go to state 19
    L  go to state 5
    S  go to state 6


state 6

    3 L: S . SEMI

    SEMI  shift, and go to state 20


state 7

   20 F: SLP . E SRP

    SLP  shift, and go to state 7
    DEC  shift, and go to state 8
    HEX  shift, and go to state 9
    OCT  shift, and go to state 10
    IDN  shift, and go to state 11

    E  go to state 21
    T  go to state 14
    F  go to state 15


state 8

   23 F: DEC .

    $default  reduce using rule 23 (F)


state 9

   24 F: HEX .

    $default  reduce using rule 24 (F)


state 10

   22 F: OCT .

    $default  reduce using rule 22 (F)


state 11

   21 F: IDN .

    $default  reduce using rule 21 (F)


state 12

    5 S: IF C . THEN S
    6  | IF C . THEN S ELSE S

    THEN  shift, and go to state 22


state 13

    8 C: E . GT E
    9  | E . LT E
   10  | E . EQ E
   11  | E . GE E
   12  | E . LE E
   13  | E . NEQ E
   14 E: E . ADD T
   15  | E . SUB T

    ADD  shift, and go to state 23
    SUB  shift, and go to state 24
    GT   shift, and go to state 25
    LT   shift, and go to state 26
    EQ   shift, and go to state 27
    GE   shift, and go to state 28
    LE   shift, and go to state 29
    NEQ  shift, and go to state 30


state 14

   16 E: T .
   17 T: T . MUL F
   18  | T . DIV F

    MUL  shift, and go to state 31
    DIV  shift, and go to state 32

    $default  reduce using rule 16 (E)


state 15

   19 T: F .

    $default  reduce using rule 19 (T)


state 16

    7 S: WHILE C . DO S

    DO  shift, and go to state 33


state 17

    4 S: IDN EQ . E

    SLP  shift, and go to state 7
    DEC  shift, and go to state 8
    HEX  shift, and go to state 9
    OCT  shift, and go to state 10
    IDN  shift, and go to state 11

    E  go to state 34
    T  go to state 14
    F  go to state 15


state 18

    0 $accept: P $end .

    $default  accept


state 19

    2 P: L P .

    $default  reduce using rule 2 (P)


state 20

    3 L: S SEMI .

    $default  reduce using rule 3 (L)


state 21

   14 E: E . ADD T
   15  | E . SUB T
   20 F: SLP E . SRP

    ADD  shift, and go to state 23
    SUB  shift, and go to state 24
    SRP  shift, and go to state 35


state 22

    5 S: IF C THEN . S
    6  | IF C THEN . S ELSE S

    IF     shift, and go to state 1
    WHILE  shift, and go to state 2
    IDN    shift, and go to state 3

    S  go to state 36


state 23

   14 E: E ADD . T

    SLP  shift, and go to state 7
    DEC  shift, and go to state 8
    HEX  shift, and go to state 9
    OCT  shift, and go to state 10
    IDN  shift, and go to state 11

    T  go to state 37
    F  go to state 15


state 24

   15 E: E SUB . T

    SLP  shift, and go to state 7
    DEC  shift, and go to state 8
    HEX  shift, and go to state 9
    OCT  shift, and go to state 10
    IDN  shift, and go to state 11

    T  go to state 38
    F  go to state 15


state 25

    8 C: E GT . E

    SLP  shift, and go to state 7
    DEC  shift, and go to state 8
    HEX  shift, and go to state 9
    OCT  shift, and go to state 10
    IDN  shift, and go to state 11

    E  go to state 39
    T  go to state 14
    F  go to state 15


state 26

    9 C: E LT . E

    SLP  shift, and go to state 7
    DEC  shift, and go to state 8
    HEX  shift, and go to state 9
    OCT  shift, and go to state 10
    IDN  shift, and go to state 11

    E  go to state 40
    T  go to state 14
    F  go to state 15


state 27

   10 C: E EQ . E

    SLP  shift, and go to state 7
    DEC  shift, and go to state 8
    HEX  shift, and go to state 9
    OCT  shift, and go to state 10
    IDN  shift, and go to state 11

    E  go to state 41
    T  go to state 14
    F  go to state 15


state 28

   11 C: E GE . E

    SLP  shift, and go to state 7
    DEC  shift, and go to state 8
    HEX  shift, and go to state 9
    OCT  shift, and go to state 10
    IDN  shift, and go to state 11

    E  go to state 42
    T  go to state 14
    F  go to state 15


state 29

   12 C: E LE . E

    SLP  shift, and go to state 7
    DEC  shift, and go to state 8
    HEX  shift, and go to state 9
    OCT  shift, and go to state 10
    IDN  shift, and go to state 11

    E  go to state 43
    T  go to state 14
    F  go to state 15


state 30

   13 C: E NEQ . E

    SLP  shift, and go to state 7
    DEC  shift, and go to state 8
    HEX  shift, and go to state 9
    OCT  shift, and go to state 10
    IDN  shift, and go to state 11

    E  go to state 44
    T  go to state 14
    F  go to state 15


state 31

   17 T: T MUL . F

    SLP  shift, and go to state 7
    DEC  shift, and go to state 8
    HEX  shift, and go to state 9
    OCT  shift, and go to state 10
    IDN  shift, and go to state 11

    F  go to state 45


state 32

   18 T: T DIV . F

    SLP  shift, and go to state 7
    DEC  shift, and go to state 8
    HEX  shift, and go to state 9
    OCT  shift, and go to state 10
    IDN  shift, and go to state 11

    F  go to state 46


state 33

    7 S: WHILE C DO . S

    IF     shift, and go to state 1
    WHILE  shift, and go to state 2
    IDN    shift, and go to state 3

    S  go to state 47


state 34

    4 S: IDN EQ E .
   14 E: E . ADD T
   15  | E . SUB T

    ADD  shift, and go to state 23
    SUB  shift, and go to state 24

    $default  reduce using rule 4 (S)


state 35

   20 F: SLP E SRP .

    $default  reduce using rule 20 (F)


state 36

    5 S: IF C THEN S .
    6  | IF C THEN S . ELSE S

    ELSE  shift, and go to state 48

    ELSE      [reduce using rule 5 (S)]
    $default  reduce using rule 5 (S)


state 37

   14 E: E ADD T .
   17 T: T . MUL F
   18  | T . DIV F

    MUL  shift, and go to state 31
    DIV  shift, and go to state 32

    $default  reduce using rule 14 (E)


state 38

   15 E: E SUB T .
   17 T: T . MUL F
   18  | T . DIV F

    MUL  shift, and go to state 31
    DIV  shift, and go to state 32

    $default  reduce using rule 15 (E)


state 39

    8 C: E GT E .
   14 E: E . ADD T
   15  | E . SUB T

    ADD  shift, and go to state 23
    SUB  shift, and go to state 24

    $default  reduce using rule 8 (C)


state 40

    9 C: E LT E .
   14 E: E . ADD T
   15  | E . SUB T

    ADD  shift, and go to state 23
    SUB  shift, and go to state 24

    $default  reduce using rule 9 (C)


state 41

   10 C: E EQ E .
   14 E: E . ADD T
   15  | E . SUB T

    ADD  shift, and go to state 23
    SUB  shift, and go to state 24

    $default  reduce using rule 10 (C)


state 42

   11 C: E GE E .
   14 E: E . ADD T
   15  | E . SUB T

    ADD  shift, and go to state 23
    SUB  shift, and go to state 24

    $default  reduce using rule 11 (C)


state 43

   12 C: E LE E .
   14 E: E . ADD T
   15  | E . SUB T

    ADD  shift, and go to state 23
    SUB  shift, and go to state 24

    $default  reduce using rule 12 (C)


state 44

   13 C: E NEQ E .
   14 E: E . ADD T
   15  | E . SUB T

    ADD  shift, and go to state 23
    SUB  shift, and go to state 24

    $default  reduce using rule 13 (C)


state 45

   17 T: T MUL F .

    $default  reduce using rule 17 (T)


state 46

   18 T: T DIV F .

    $default  reduce using rule 18 (T)


state 47

    7 S: WHILE C DO S .

    $default  reduce using rule 7 (S)


state 48

    6 S: IF C THEN S ELSE . S

    IF     shift, and go to state 1
    WHILE  shift, and go to state 2
    IDN    shift, and go to state 3

    S  go to state 49


state 49

    6 S: IF C THEN S ELSE S .

    $default  reduce using rule 6 (S)
